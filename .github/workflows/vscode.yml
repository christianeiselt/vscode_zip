name: CICD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

#    - name: Set up Node.js
#      uses: actions/setup-node@v3
#      with:
#        node-version: 14

    - name: Download Visual Studio Code
      run: |
        curl -O https://code.visualstudio.com/VSCode-win32-x64-$(cat versions.json | jq -r '.vscode_version').zip
        
    - name: Download Extensions
      run: |
        cat versions.json | jq -c '.extensions[]' | while read -r extension; do
          ext_name=$(echo $extension | jq -r '.name')
          ext_publisher=$(echo $extension | jq -r '.publisher')
          ext_version=$(echo $extension | jq -r '.version')
          curl -O https://$ext_publisher.gallery.vsassets.io/_apis/public/gallery/publisher/$ext_publisher/extension/$ext_name/$ext_version/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage
        done
#    - name: Create Artifact
#      run: |
#        tar -czf vscode_with_extensions.tar.gz vscode/
#        echo "::set-output name=artifact_path::vscode_with_extensions.tar.gz"

#    - name: Upload Artifact
#      uses: actions/upload-artifact@v3
#      with:
#        name: vscode_with_extensions
#        path: ${{ steps.create_artifact.outputs.artifact_path }}

    - name: List directory content
      run: |
        pwd
        ls -la

