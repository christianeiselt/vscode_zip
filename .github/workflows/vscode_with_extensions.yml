name: Visual Studio Code Pipeline

on:
  push:
    branches:
      - main
  schedule:
    - cron: 0 5 * * * # TZ=UTC

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      # Get current release version
      - name: Get current release version
        id: current_release
        run: echo "current_release_version=$(`"$((Get-Content ./release_version.json | ConvertFrom-Json).appVersion)-$((Get-Content ./release_version.json | ConvertFrom-Json).iteration)`")" >> $env:GITHUB_OUTPUT

      # Download vscode zip
      - name: Download vscode archive
        run: ./scripts/Download-VSCodex64Archive.ps1
      - name: Move file to data directory
        run: |
          mkdir -p vscode\extensions
          mv VSCode*.zip vscode

      # - name: Download vscode install script
      #   run: Invoke-WebRequest https://raw.githubusercontent.com/PowerShell/vscode-powershell/main/scripts/Install-VSCode.ps1 -Outfile Install-VSCode.ps1

      # Download and Install VS Code and extensions on Windows
      - name: Download and install
        run: ./scripts/Install-VSCodeExtensions.ps1 -AdditionalExtensions $((Get-Content ./extensions.json | ConvertFrom-Json).extensions.uid) -BuildEdition 'Stable-User'

      - name: Archive extensions and update extensions.json
        run: echo "new_release_version=$(./scripts/Archive-VSCodeExtensions.ps1)" >> $env:GITHUB_OUTPUT
        id: archive_extensions

      - name: List release versions
        run: |
          echo "${{ steps.current_release.outputs.current_release_version }} (Current Release)"
          echo "${{ steps.archive_extensions.outputs.new_release_version }} (New Release)"

      - name: Update Changelog
        run: |
          git diff HEAD^ HEAD ./extensions.json > CHANGELOG.md
        id: diff

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.archive_extensions.outputs.new_release_version }}
          tag_name: ${{ steps.archive_extensions.outputs.new_release_version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
        if: steps.current_release.outputs.current_release_version != steps.archive_extensions.outputs.new_release_version
  
      - name: upload artifact as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "vscode_with_extensions.zip"
          asset_name: "vscode_with_extensions-release_${{ steps.archive_extensions.outputs.new_release_version }}.zip"
          asset_content_type: application/zip
        if: steps.current_release.outputs.current_release_version != steps.archive_extensions.outputs.new_release_version

      - name: Remove artifact directory
        run: |
          if (Test-Path vscode){Remove-Item -recurse -force vscode}
          if (Test-Path vscode_with_extensions.zip){Remove-Item vscode_with_extensions.zip}
  
      - name: GitHub Commit & Push
        uses: actions-js/push@v1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        if: steps.current_release.outputs.current_release_version != steps.archive_extensions.outputs.new_release_version
  
  
